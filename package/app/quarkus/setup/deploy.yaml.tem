apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: ${BC_APPLICATION_NAME}-template
  xpaas: 1.0.0
message: ${BC_APPLICATION_NAME} Service has been created in your project.
metadata:
  name: ${BC_APPLICATION_NAME}
  annotations:
    description: ${BC_APPLICATION_NAME} Service.
    iconClass: icon-quarkus
    openshift.io/display-name: ${BC_APPLICATION_NAME} Service
    version: ${PROJECT_ARTIFACT_VERSION}
objects:
- apiVersion: v1
  kind: "ImageStream"
  metadata:
    labels:
      application: ${BC_APPLICATION_NAME}
    name: ${BC_APPLICATION_NAME}
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: ${BC_PUSH_IMAGE_REGISTRY}/${BC_PUSH_IMAGE_REPO}/${BC_PUSH_IMAGE_NAME}:${BC_PUSH_IMAGE_VERSION}
      generation: 1
      importPolicy:
        scheduled: true
      name: latest
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${BC_APPLICATION_NAME}
      app.openshift.io/runtime: quarkus
      app.kubernetes.io/name: ${BC_APPLICATION_NAME}
    name: ${BC_APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${BC_APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: ${BC_APPLICATION_NAME}
          deploymentConfig: ${BC_APPLICATION_NAME}
        name: ${BC_APPLICATION_NAME}
      spec:
        containers:
        - image: ${BC_APPLICATION_NAME}
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - curl localhost:8080
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
          imagePullPolicy: Always
          name: ${BC_APPLICATION_NAME}
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          resources: {}
        terminationGracePeriodSeconds: 30
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${BC_APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${BC_APPLICATION_NAME}:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      application: ${BC_APPLICATION_NAME}
    name: ${BC_APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: ${BC_APPLICATION_NAME}
- apiVersion: v1
  id: ${BC_APPLICATION_NAME}-https
  kind: Route
  metadata:
    annotations:
      description: Route for application's https service.
    labels:
      application: ${BC_APPLICATION_NAME}
    name: ${BC_APPLICATION_NAME}
  spec:
    port:
      targetPort: "8080"
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      name: ${BC_APPLICATION_NAME}
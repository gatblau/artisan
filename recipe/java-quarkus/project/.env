# the URI of the project GIT repository
GIT_URI=
# the URI of the SonarQube server to use for code quality reporting
SONAR_URI=
# the unique key identifying the project in the SonarQube server
SONAR_PROJECT_KEY=
# the path the sonar scanner should use to scan source code
SONAR_SOURCES=src/
# the path the sonar scanner should use to scan binary files
SONAR_BINARIES=target/classes
# the name:tag for the application package to be published (e.g. registry-host/app-group/app-name)
APP_PACKAGE_NAME=
# the maven artifact id for the application
PROJECT_ARTIFACT_ID=
# the maven project group for the application
PROJECT_GROUP_ID=
# the version of the application artifact
PROJECT_ARTIFACT_VERSION=0.0.1
# openshift app name
BC_APPLICATION_NAME=
# image builder name (buildah image)
BC_BUILDER_IMAGE=
# application image registry name
BC_PUSH_IMAGE_REGISTRY=
# application image repo name
BC_PUSH_IMAGE_REPO=
# application image name
BC_PUSH_IMAGE_NAME=
# application image version/tag
BC_PUSH_IMAGE_VERSION=
# application runtime image registry name
BC_PULL_IMAGE_REGISTRY=
# docker context artefact name
BC_PACKAGE_NAME=
# function name to build image
BC_FX_NAME=
# email id which is used to genearte crypto signature keys
BC_CRYPTO_KEY_EMAIL=
# user name for the container registry where the base image is located
BC_PULL_IMAGE_REGISTRY_UNAME=
# cryptography signature secret name
BC_CRYPTO_KEY_NAME=
# the token to access the Sonar server
SONAR_TOKEN=
# the artisan registry user
ART_REG_USER=
# the artisan registry password
ART_REG_PWD=
# password for the container registry where the base image is located
BC_PULL_IMAGE_REGISTRY_PWD=
# user name for the container registry where the application image will be pushed
BC_PUSH_IMAGE_REGISTRY_UNAME=
# password for the container registry where the application image will be pushed
BC_PUSH_IMAGE_REGISTRY_PWD=
# artefact registry user name
BC_ART_REG_USER=
# artefact registry user password
BC_ART_REG_PWD=
# the path of the key in the artisan registry as described below:
# the private PGP key required to digitally sign the application package
SIGNING_KEY=
# the public PGP key required to open the application package
VERIFICATION_KEY=/
# the path of the key in the artisan registry as described below:
# the public PGP key required to open the package domain/tekton/bc-launcher:latest
TEKTON_BC_LAUNCHER_VERIFICATION_KEY=/
# domain specific package credentials
ART_REG_USER_{{NORMALISED DOMAIN HERE}}
ART_REG_PWD_{{NORMALISED DOMAIN HERE}}